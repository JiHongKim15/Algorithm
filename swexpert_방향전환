package swexpert;

import java.util.LinkedList;
import java.util.Queue;
import java.util.Scanner;

public class 방향전환 {

	private static int[] dr = { 1, -1, 0, 0 };
	private static int[] dc = { 0, 0, 1, -1 };

	static class Node {
		int i;
		int j;
		int d;
		int cnt;

		Node(int i, int j, int d, int cnt) {
			this.i = i;
			this.j = j;
			this.d = d;
			this.cnt = cnt;
		}
	}

	public static void main(String[] args) throws Exception {
//		BufferedReader input = new BufferedReader(new InputStreamReader(System.in));
//		StringTokenizer tokens = new StringTokenizer(input.readLine());

//		int T = Integer.parseInt(tokens.nextToken());

		Scanner sc = new Scanner(System.in);
		int T = sc.nextInt();
		for (int tc = 1; tc <= T; tc++) {
//			int x1 = Integer.parseInt(tokens.nextToken());
//			int y1 = Integer.parseInt(tokens.nextToken());
//			int x2 = Integer.parseInt(tokens.nextToken());
//			int y2 = Integer.parseInt(tokens.nextToken());

			int x1 = sc.nextInt();
			int y1 = sc.nextInt();
			int x2 = sc.nextInt();
			int y2 = sc.nextInt();

			Queue<Node> q = new LinkedList<>();

			q.add(new Node(x1, y1, 0, 0));
			q.add(new Node(x1, y1, 1, 0));

			while (!q.isEmpty()) {
				Node buf = q.poll();

				if (buf.i == x2 && buf.j == y2) {
					System.out.println("#" + tc + " " + buf.cnt);
					break;
				}
				// 0일때 상하이동 -> 좌우이동
				if (buf.d == 0) {
					if (x2 > buf.i) {
						q.add(new Node(buf.i + dr[0], buf.j + dc[0], 1, buf.cnt + 1));
					} else if (x2 < buf.i) {
						q.add(new Node(buf.i + dr[1], buf.j + dc[1], 1, buf.cnt + 1));
					} else {
						q.add(new Node(buf.i + dr[0], buf.j + dc[0], 1, buf.cnt + 1));
//						q.add(new Node(buf.i+dr[1], buf.j+dc[1], 1, buf.cnt+1));
					}
				} else {
					if (y2 > buf.j) {
						q.add(new Node(buf.i + dr[2], buf.j + dc[2], 0, buf.cnt + 1));
					} else if (y2 < buf.j) {
						q.add(new Node(buf.i + dr[3], buf.j + dc[3], 0, buf.cnt + 1));
					} else {
						q.add(new Node(buf.i + dr[3], buf.j + dc[3], 0, buf.cnt + 1));
//						q.add(new Node(buf.i+dr[3], buf.j+dc[3], 0, buf.cnt+1));
					}
				}

			}

		}
	}
}
